{"version":3,"sources":["component/clock-face.tsx","model/noun.ts","util/number-util.ts","util/time-util.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getRotateDegreesTransform","degrees","ClockFace","time","secondsTransform","useMemo","getSeconds","minutesTransform","getMinutes","hoursTransform","getHours","id","viewBox","cx","cy","r","className","x","y","width","height","rx","ry","transform","x1","y1","x2","y2","strokeLinecap","Noun","singularForm","pluralForm","lenitedForm","this","translateNumber","number","translateNumberInternal","isLenited","isCounting","translateNumberedNoun","noun","onesPlace","tenRepresentation","tensPlaceString","GaelicTimeIdiom","hourOfDay","prefix","TimeIdiomPrefix","minutes","preposition","hourNoun","minuteNoun","translateHour","hour","includeHour","quarter","afterPreposition","App","props","useState","Date","setTime","timeTranslation","hourTranslation","minutesAfterPrefix","minutesUntilHour","minutesUntilPrefix","translateTime","useEffect","setInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52f5ac5f.chunk.js","sourcesContent":["import React, {useMemo} from 'react';\n\n/**\n * Builds transform attribute to rotate about the point 50,50 by the given number of degrees\n */\nfunction getRotateDegreesTransform(degrees: number) {\n    return `rotate(${degrees} 50 50)`;\n}\n\n/**\n * Renders the given time on an analog clock face\n */\nexport function ClockFace({time}: {time: Date}) {\n    // Rotate second hand 6 degrees per second\n    const secondsTransform = useMemo(\n        () => getRotateDegreesTransform(6 * time.getSeconds()),\n        [time.getSeconds()]\n    );\n\n    // Rotate minute hand 6 degrees per minute\n    const minutesTransform = useMemo(\n        () => getRotateDegreesTransform(6 * time.getMinutes()),\n        [time.getMinutes()]\n    );\n\n    // Rotate hour hand proprtionally to hours and minutes\n    const hoursTransform = useMemo(\n        () => getRotateDegreesTransform(30*(time.getHours() % 12) + time.getMinutes() / 2),\n        [time.getMinutes()]\n    );\n\n    return <div>\n        <svg id=\"clock-face\" viewBox=\"0 0 100 100\">\n            <circle cx=\"50\" cy=\"50\" r=\"45\"/>\n            <g>\n                <rect className=\"hour-marker\" x=\"50\" y=\"8\" width=\"1\" height=\"8\" rx=\"1\" ry=\"1\" transform=\"rotate(0 50 50)\"/>\n                <rect className=\"hour-marker\" x=\"50\" y=\"8\" width=\".5\" height=\"8\" rx=\"1\" ry=\"1\" transform=\"rotate(30 50 50)\"/>\n                <rect className=\"hour-marker\" x=\"50\" y=\"8\" width=\".5\" height=\"8\" rx=\"1\" ry=\"1\" transform=\"rotate(60 50 50)\"/>\n\n                <rect className=\"hour-marker\" x=\"50\" y=\"8\" width=\"1\" height=\"8\" rx=\"1\" ry=\"1\" transform=\"rotate(90 50 50)\"/>\n                <rect className=\"hour-marker\" x=\"50\" y=\"8\" width=\".5\" height=\"8\" rx=\"1\" ry=\"1\" transform=\"rotate(120 50 50)\"/>\n                <rect className=\"hour-marker\" x=\"50\" y=\"8\" width=\".5\" height=\"8\" rx=\"1\" ry=\"1\" transform=\"rotate(150 50 50)\"/>\n\n                <rect className=\"hour-marker\" x=\"50\" y=\"8\" width=\"1\" height=\"8\" rx=\"1\" ry=\"1\" transform=\"rotate(180 50 50)\"/>\n                <rect className=\"hour-marker\" x=\"50\" y=\"8\" width=\".5\" height=\"8\" rx=\"1\" ry=\"1\" transform=\"rotate(210 50 50)\"/>\n                <rect className=\"hour-marker\" x=\"50\" y=\"8\" width=\".5\" height=\"8\" rx=\"1\" ry=\"1\" transform=\"rotate(240 50 50)\"/>\n\n                <rect className=\"hour-marker\" x=\"50\" y=\"8\" width=\"1\" height=\"8\" rx=\"1\" ry=\"1\" transform=\"rotate(270 50 50)\"/>\n                <rect className=\"hour-marker\" x=\"50\" y=\"8\" width=\".5\" height=\"8\" rx=\"1\" ry=\"1\" transform=\"rotate(300 50 50)\"/>\n                <rect className=\"hour-marker\" x=\"50\" y=\"8\" width=\".5\" height=\"8\" rx=\"1\" ry=\"1\" transform=\"rotate(330 50 50)\"/>\n            </g>\n            <g>\n                <line id=\"hour-hand\" x1=\"50\" y1=\"50\" x2=\"50\" y2=\"20\" strokeLinecap=\"round\" transform={hoursTransform}/>\n                <line id=\"minute-hand\" x1=\"50\" y1=\"50\" x2=\"50\" y2=\"15\" strokeLinecap=\"round\" transform={minutesTransform}/>\n                <line id=\"second-hand\" x1=\"50\" y1=\"50\" x2=\"50\" y2=\"8\" strokeLinecap=\"round\" transform={secondsTransform}/>\n                <circle id=\"clock-center\" cx=\"50\" cy=\"50\" r=\"2\"/>\n            </g>\n        </svg>\n    </div>;\n}\n","/**\n * A Gaelic noun.\n *\n * Different forms of the word are included so they can be used where appropriate,\n * without having to determine the correct form using rules.\n *\n * (The genitive form is not required here because it doesn't factor into the number/date rules)\n */\nexport class Noun {\n    /**\n     * Singular or root form of the noun\n     */\n    singularForm: string;\n\n    /**\n     * Lenited form of the noun.\n     *\n     * If the noun does not lenite, this is identical to the singular form\n     */\n    lenitedForm: string;\n\n    /**\n     * Plural form of the noun\n     */\n    pluralForm: string;\n\n    /**\n     * Constructs a noun with the given forms.\n     *\n     * If the noun does not lenite, leave lenitedForm undefined and it will match the singular\n     */\n    constructor(\n        singularForm: string,\n        pluralForm: string,\n        lenitedForm?: string,\n    ) {\n        this.singularForm = singularForm;\n        this.pluralForm = pluralForm;\n\n        // Default the lenited form to matching the singular if none is provided\n        if (typeof lenitedForm !== 'undefined') {\n            this.lenitedForm = lenitedForm;\n        } else {\n            this.lenitedForm = singularForm;\n        }\n    }\n}\n","import {Noun} from '../model/noun';\n\n/**\n * Translates a number into Gaelic, using the decimal system\n */\nexport function translateNumber(number: number) : string {\n    return translateNumberInternal(number, false, false);\n}\n\n/**\n * Translates a number into Gaelic using the decimal system, with some clues from context about what form the number should take\n *\n * @param number the number to translate\n * @param isLenited whether the number should be lenited, because it is following \"dà\"\n * @param isCounting whether the number is in its counting form, ie following \"'s a\"\n */\nfunction translateNumberInternal(number: number, isLenited: boolean, isCounting: boolean) : string {\n    switch (number) {\n    case 1:\n        return isCounting ? 'h-aon' : 'aon';\n    case 2:\n        return 'dhà';\n    case 3:\n        return 'trì';\n    case 4:\n        return 'ceithir';\n    case 5:\n        return 'còig';\n    case 6:\n        return 'sia';\n    case 7:\n        return 'seachd';\n    case 8:\n        return isCounting ? 'h-ochd' : 'ochd';\n    case 9:\n        return 'naoi';\n    case 10:\n        return 'deich';\n    case 12:\n        return 'dhà dheug';\n    case 20:\n        return 'fichead';\n    case 30:\n        return 'trithead';\n    case 40:\n        return 'ceathrad';\n    case 50:\n        return 'caogad';\n    case 60:\n        return 'seasgad';\n    case 70:\n        return 'seachdad';\n    case 80:\n        return 'ochdad';\n    case 90:\n        return 'naochad';\n    default:\n        if (number > 10 && number < 20) {\n            const onesPlace = number % 10;\n            return translateNumberInternal(onesPlace, false, false) + ' deug';\n        } else if (number > 20 && number < 30) {\n            const onesPlace = number % 10;\n            return 'fichead \\'s a ' + translateNumberInternal(onesPlace, false, true);\n        }\n\n        throw 'Number is out of range for translation: ' + number;\n    }\n}\n\n/**\n * Translates a numbered noun into Gaelic.\n *\n * This will incorporate the appropriate form of the noun into the decimal representation of the number.\n */\nexport function translateNumberedNoun(number: number, noun: Noun): string {\n    if (number == 1) {\n        return 'aon ' + noun.singularForm;\n    } else if (number == 2) {\n        return 'dà ' + noun.lenitedForm;\n    } else if (number < 10) {\n        // Form \"tri chair\"\n        const onesPlace = number % 10;\n        return translateNumber(onesPlace) + ' ' + noun.pluralForm;\n    } else if (number == 10) {\n        // Form \"deic cair\"\n        return 'deich ' + noun.pluralForm;\n    } else if (number < 20) {\n        // Form \"aon char deug\"\n        const onesPlace = number % 10;\n        const tenRepresentation = onesPlace == 2 ? 'dheug' : 'deug';\n        return translateNumberedNoun(onesPlace, noun) + ' ' + tenRepresentation;\n    } else if (number < 100) {\n        const onesPlace = number % 10;\n\n        const tensPlace = number - onesPlace;\n        const tensPlaceString = translateNumber(tensPlace) +\n                ' ' +\n                noun.singularForm;\n        if (onesPlace == 0) {\n            // Form \"fichead car\"\n            return tensPlaceString;\n        } else {\n            // Form \"fichead car 's a tri\"\n            return tensPlaceString +\n                ' \\'s a ' +\n                translateNumberInternal(onesPlace, false, true);\n        }\n    }\n\n    throw 'Number is out of range for translation: ' + number;\n}\n","import {Noun} from '../model/noun';\nimport {translateNumber, translateNumberedNoun} from './number-util';\n\n/**\n * The time of day as described in Gaelic idiom\n */\nexport class GaelicTimeIdiom {\n    hourOfDay: string;\n    prefix?: TimeIdiomPrefix;\n\n    /**\n     * Constructs a Gaelic Time with the given components\n     *\n     * Prefix is optional, and will be blank for times that fall directly on the hour\n     */\n    constructor(hourOfDay: string, prefix?: TimeIdiomPrefix) {\n        this.hourOfDay = hourOfDay;\n        if (typeof prefix !== 'undefined') {\n            this.prefix = prefix;\n        }\n    }\n}\n\n/**\n * Prefix component of a Gaelic time idiom.\n *\n * This separates the minutes from the preposition so that they can be displayed differently\n * if desired.\n */\nexport class TimeIdiomPrefix {\n    minutes: string;\n    preposition: string;\n\n    /**\n     * Constructs a new TimeIdiomPrefix\n     */\n    constructor(minutes: string, preposition: string) {\n        this.minutes = minutes;\n        this.preposition = preposition;\n    }\n}\n\n/**\n * Gaelic noun for hour, \"uair\".\n *\n * Note: Does not lenite.\n */\nconst hourNoun = new Noun('uair', 'uairean');\n\n/**\n * Gaelic noun for minute, \"mionaid\"\n */\nconst minuteNoun = new Noun('mionaid', 'mionaidean', 'mhionaid');\n\n/**\n * Translates an hour of day into Gaelic.\n *\n * Example: \"uair\" or \"cethir uairean\"\n *\n * @param hour the hour of day\n * @param includeHour whether to include the noun \"uair/uairean\" meaning \"hour\" in the string.\n */\nfunction translateHour(hour: number, includeHour: boolean = true) {\n    if (hour == 0) {\n        // 12 midnight, literally \"mid-night\"\n        return 'meadhan-oidhche';\n    } else if (hour == 12) {\n        // 12 noon, literally \"mid-day\";\n        return 'meadhan-là';\n    }\n\n    hour = hour % 12;\n\n    if (hour == 1) {\n        // 1 'o clock, literally just \"hour\"\n        return hourNoun.singularForm;\n    }\n\n    return includeHour ?\n        translateNumberedNoun(hour, hourNoun) :\n        translateNumber(hour);\n}\n\n/**\n * Word for \"quarter\"\n */\nconst quarter = 'cairteal';\n\n/**\n * Preposition for \"after\"\n */\nconst afterPreposition = 'an dèidh';\n\n/**\n * Preposition for \"to\"\n */\nconst toPreposition = 'gu';\n\n/**\n * Translates the time portion of a given date into Gaelic\n */\nexport function translateTime(time: Date): GaelicTimeIdiom {\n    const minutes = time.getMinutes();\n\n    if (minutes == 0) {\n        // exactly on the hour\n        const hourTranslation = translateHour(time.getHours());\n        return new GaelicTimeIdiom(hourTranslation);\n    } else if (minutes == 15) {\n        // Quarter past the hour\n        const hourTranslation = translateHour(time.getHours(), false);\n        return new GaelicTimeIdiom(hourTranslation, new TimeIdiomPrefix(quarter, afterPreposition));\n    } else if (minutes < 30) {\n        // Some number of minutes past the hour\n        const hourTranslation = translateHour(time.getHours(), false);\n        const minutesAfterPrefix = new TimeIdiomPrefix(\n            translateNumberedNoun(time.getMinutes(), minuteNoun),\n            afterPreposition\n        );\n\n        return new GaelicTimeIdiom(hourTranslation, minutesAfterPrefix);\n    } else if (minutes == 30) {\n        // Half past the hour\n        const hourTranslation = translateHour(time.getHours(), false);\n        return new GaelicTimeIdiom(hourTranslation, new TimeIdiomPrefix('leth-uair', afterPreposition));\n    } else if (minutes == 45) {\n        // Quarter til the hour\n        const nextHour = (time.getHours() + 1) % 24;\n        const hourTranslation = translateHour(nextHour, false);\n        return new GaelicTimeIdiom(hourTranslation, new TimeIdiomPrefix(quarter, toPreposition));\n    } else {\n        // Some number of minutes until the hour\n        const nextHour = (time.getHours() + 1) % 24;\n        const hourTranslation = translateHour(nextHour, false);\n\n        const minutesUntilHour = 60 - time.getMinutes();\n        const minutesUntilPrefix = new TimeIdiomPrefix(\n            translateNumberedNoun(minutesUntilHour, minuteNoun),\n            toPreposition\n        );\n\n        return new GaelicTimeIdiom(hourTranslation, minutesUntilPrefix);\n    }\n}\n","import React, {useEffect, useMemo, useState} from 'react';\nimport {ClockFace} from './component/clock-face';\nimport {GaelicTimeIdiom, translateTime} from './util/time-util';\n\n/**\n * Application's main component\n *\n * Will refresh the current time once a minute and translate it into Gaelic\n */\nexport function App(props: {}) {\n    const [time, setTime] = useState(new Date());\n    const timeTranslation: GaelicTimeIdiom = useMemo(\n        () => translateTime(time),\n        [time.getMinutes()]\n    );\n\n    /**\n     * Update the app's current time every second\n     */\n    useEffect(\n        () => {\n            setInterval(\n                () => {\n                    setTime(new Date());\n                },\n                1000\n            );\n        },\n        []\n    );\n\n    return <div>\n        <div className=\"center gaelic-text\">\n            <div className=\"time-prompt non-number\">\n                Dè an uair a tha e? Tha e\n            </div>\n            {timeTranslation.prefix && <div className=\"time-prefix\">\n                <span className=\"number\">{timeTranslation.prefix?.minutes}&nbsp;</span>\n                <span className=\"non-number\">{timeTranslation.prefix?.preposition}</span>\n            </div>}\n            <div className=\"time-hour number\">\n                {timeTranslation.hourOfDay}\n            </div>\n            <div id=\"clock-container\">\n                <ClockFace time={time}></ClockFace>\n            </div>\n        </div>\n    </div>;\n}\n\nexport default App;\n","import {ReportHandler} from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}